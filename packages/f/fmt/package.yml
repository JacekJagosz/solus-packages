name       : fmt
version    : 12.0.0
release    : 10
source     :
    - https://github.com/fmtlib/fmt/releases/download/12.0.0/fmt-12.0.0.zip : 1c32293203449792bf8e94c7f6699c643887e826f2d66a80869b4f279fb07d25
    # Comment this out if not making compatibility build
    - https://github.com/fmtlib/fmt/releases/download/10.2.1/fmt-10.2.1.zip#compat.zip : 312151a2d13c8327f5c9c586ac6cf7cddc1658e8f53edae0ec56509c8fa516c9
license    : BSD-2-Clause
component  : programming.library
homepage   : https://fmt.dev/
summary    : Small, safe and fast formatting C++ library
description: |
    {fmt} is an open-source formatting library for C++. It can be used as a safe and fast alternative to (s)printf and IOStreams.
clang      : true
environment: |
    # Set this to true to build compatibility libraries
    export BUILD_COMPAT=true
    # Set the version of the old version of fmt to build
    export COMPAT_VERSION="10.2.1"
setup      : |
    if [ "$BUILD_COMPAT" = true ]; then
        mkdir ../compat
        unzip $sources/compat.zip -d ../compat

        pushd "../compat/fmt-$COMPAT_VERSION"
            %cmake_ninja -DBUILD_SHARED_LIBS=ON
        popd
    fi

    %cmake_ninja -DBUILD_SHARED_LIBS=ON
build      : |
    if [ "$BUILD_COMPAT" = true ]; then
        pushd "../compat/fmt-$COMPAT_VERSION"
            env CCACHE_BASEDIR="${pwd}" %ninja_build
        popd
    fi

    env CCACHE_BASEDIR="${pwd}" %ninja_build
install    : |
    if [ "$BUILD_COMPAT" = true ]; then
        pushd "../compat/fmt-$COMPAT_VERSION"
            mkdir tmp
            DESTDIR="${pwd}/tmp" cmake --install solusBuildDir --verbose

            # Only copy the .so files
            install -dm00755 $installdir/%libdir%/
            find ${pwd}/tmp/%libdir% -name "libfmt.so.*" -print -exec mv {} $installdir/%libdir% \;
        popd
    fi

    %ninja_install
check      : |
    %ninja_check
