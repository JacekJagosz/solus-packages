From 82c59ea8827cef293138d63ac660c1fa28f04404 Mon Sep 17 00:00:00 2001
From: Akseli Lahtinen <akselmo@akselmo.dev>
Date: Tue, 14 Oct 2025 13:14:20 +0300
Subject: [PATCH] CopyJob: Do not assume item is not writable

Lack of UDS_ACCESS or S_IWUSR flag in it does *not* mean
that the item is definitely unwritable.

The access can be indefinite until the item is
actually worked with.

KIO should not assume that items are unwritable,
even if we lack the flag. We should just try working
with the file and handle the results, not try
pre-emptively decide the actions.

BUG: 510567
---
 src/core/copyjob.cpp | 12 ------------
 1 file changed, 12 deletions(-)

diff --git a/src/core/copyjob.cpp b/src/core/copyjob.cpp
index 587a5d6805..eb3958c3d8 100644
--- a/src/core/copyjob.cpp
+++ b/src/core/copyjob.cpp
@@ -546,18 +546,6 @@ void CopyJobPrivate::slotResultStating(KJob *job)
         } else {
             const bool isDir = entry.isDir();
 
-            // Check for writability, before spending time stat'ing everything (#141564).
-            // This assumes all KIO workers set permissions correctly...
-            const int permissions = entry.numberValue(KIO::UDSEntry::UDS_ACCESS, -1);
-            const bool isWritable = (permissions != -1) && (permissions & S_IWUSR);
-            if (!isWritable) {
-                const QUrl dest = m_asMethod ? m_dest.adjusted(QUrl::RemoveFilename) : m_dest;
-                q->setError(ERR_WRITE_ACCESS_DENIED);
-                q->setErrorText(dest.toDisplayString(QUrl::PreferLocalFile));
-                q->emitResult();
-                return;
-            }
-
             // Treat symlinks to dirs as dirs here, so no test on isLink
             destinationState = isDir ? DEST_IS_DIR : DEST_IS_FILE;
             qCDebug(KIO_COPYJOB_DEBUG) << "dest is dir:" << isDir;
-- 
GitLab

